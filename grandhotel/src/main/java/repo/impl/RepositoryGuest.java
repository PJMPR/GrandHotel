package repo.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import baza.IUnitOfWork;
import maper.IMapResultSetIntoEntity;
import repo.IRepositoryGuest;
import repo.RepositoryBase;
import rezervations.Guest;

public class RepositoryGuest extends RepositoryBase<Guest> implements IRepositoryGuest{

	private PreparedStatement getName;
	
	protected RepositoryGuest(Connection connection, IMapResultSetIntoEntity<Guest> mapper, IUnitOfWork uow) {
		super(connection, mapper, uow);

		try {
			getName = connection.prepareStatement(getNameSql());
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private String getNameSql() {
		return "select * from guests where name = ?";
	}

	public List<Guest> withName(String name) {
		 List<Guest> guests = new ArrayList<Guest>();
         try{
             getName.setString(1,name);
             ResultSet resultSet = getName.executeQuery();
             while(resultSet.next()){
                 guests.add(mapper.map(resultSet));
             }
         }catch (SQLException e){
             e.printStackTrace();
         }
         return guests;
	}

	@Override
	protected void setInsert(Guest entity) throws SQLException {
		insert.setString(1, entity.getName());
		insert.setString(2, entity.getSurname());
		insert.setString(3, entity.getEmail());
		insert.setString(4, entity.getPhone());
		insert.setString(5, entity.getAdres());
		insert.setString(6, entity.getCard());
	}

	@Override
	protected void setUpdate(Guest entity) throws SQLException {
		update.setString(1, entity.getName());
		update.setString(2, entity.getSurname());
		update.setString(3, entity.getEmail());
		update.setString(4, entity.getPhone());
		update.setString(5, entity.getAdres());
		update.setString(6, entity.getCard());
	}

	@Override
	protected String tableName() {
		return "guests";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE guests("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," 
				+ "surname varchar(50)," 
				+ "email varchar(20),"
				+ "phone varchar(10),"
				+ "adres varchar(30),"
				+ "card varchar(20)"
				+ ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO guests("
				+ "name, "
				+ "surname, "
				+ "email, "
				+ "phone, "
				+ "adres, "
				+ "card"
				+ ") "
				+ "VALUES (?,?,?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE guests SET ("
				+ "name, "
				+ "surname, "
				+ "email, "
				+ "phone, "
				+ "adres, "
				+ "card"
				+ ")=(?,?,?,?,?,?) " + "WHERE id=?";
	}
}
